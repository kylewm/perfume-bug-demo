import { config } from './config';
import { reportPerf } from './reportPerf';
import { roundByTwo } from './utils';
export var logData = function (measureName, metric, customProperties) {
    Object.keys(metric).forEach(function (key) {
        if (typeof metric[key] === 'number') {
            metric[key] = roundByTwo(metric[key]);
        }
    });
    // Sends the metric to an external tracking service
    reportPerf(measureName, metric, customProperties);
};
/**
 * Dispatches the metric duration into internal logs
 * and the external time tracking service.
 */
export var logMetric = function (duration, measureName, customProperties) {
    var duration2Decimal = roundByTwo(duration);
    if (duration2Decimal <= config.maxTime && duration2Decimal >= 0) {
        // Sends the metric to an external tracking service
        reportPerf(measureName, duration2Decimal, customProperties);
    }
};
//# sourceMappingURL=log.js.map